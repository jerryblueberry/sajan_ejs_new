<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
      crossorigin="anonymous"
    ></script>
    <title>Cart</title>
  </head>
  <body>
    <style>
      .product-image {
        height: 150px;
      }
    </style>
    <%- include('components/navbar') %> <% if (userCart.products.length === 0) {
    %>
    <div>
      <p>Your cart is empty.</p>
    </div>
    <% } else { %>

    <div>
      <ul>
        <% userCart.products.forEach(product => { %>
        <li>
          <h2><%= product.product.title %></h2>
          <h2><%= product.product._id %></h2>
          <p>Description: <%= product.product.description %></p>
          <p>Price: $<%= product.price %></p>
          <p>Quantity: <%= product.quantity %></p>
          <div>
            <% product.product.image.forEach(imageUrl => { %>
            <img
              class="product-image"
              src="/<%= imageUrl.replace(/\\/g, '/') %>"
              alt="<%= product.product.title %>"
            />
            <% }); %>
          </div>
          <button
            class="btn_increament"
            data-product-id="<%= product.product._id %>"
          >
            Increment
          </button>

          <button
            data-product-id="<%= product.product._id%>"
            class="btn_decreament"
          >
            Decrement
          </button>

          <button
            data-product-quantity="<%= product.quantity%>"
            data-product-id="<%= product.product._id%>"
            class="btn_remove"
          >
            Remove
          </button>

          <br />
        </li>
        <% }); %>
      </ul>
      <p>Total Price: $<%= userCart.total_price %></p>
    </div>
    <button class="btn_checkout" id="checkout_btn">Checkout</button>
    <% } %>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const increamentButtons = document.querySelectorAll('.btn_increament');
        increamentButtons.forEach((button) => {
          button.addEventListener('click', async () => {
            try {
              const productId = button.dataset.productId;
              const response = await fetch('/carts/increament', {
                method: 'PUT',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                  product: productId,
                }),
              });

              if (!response.ok) {
                const errorMessage = await response.text();
                throw new Error(errorMessage);
              }

              const responseData = await response.json();
              alert('Product quantity incremented successfully');
              console.log(responseData);
              location.reload();
            } catch (error) {
              console.error(
                'Error incrementing product quantity:',
                error.message
              );
              alert(
                'An error occurred while incrementing product quantity. Please try again.'
              );
            }
          });
        });

        const decreamentButton = document.querySelectorAll('.btn_decreament');
        decreamentButton.forEach((button) => {
          button.addEventListener('click', async () => {
            try {
              const productId = button.dataset.productId;
              const response = await fetch('/carts/decreament', {
                method: 'PUT',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                  product: productId,
                }),
              });

              if (!response.ok) {
                console.log('Error Occurred while decreasing product');
              }
              const responseData = await response.json();

              alert('Product quantity decreased Successfully');
              console.log(responseData);
              location.reload();
            } catch (error) {
              console.log('Error decreasing product quantity'.error.message);
            }
          });
        });
        //  for remove
        const removeButton = document.querySelectorAll('.btn_remove');
        removeButton.forEach((button) => {
          button.addEventListener('click', async () => {
            try {
              const productId = button.dataset.productId;
              const response = await fetch('/carts/remove', {
                method: 'DELETE',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                  product: productId,
                }),
              });
              if (!response.ok) {
                console.log('Error Occurred while decreasing product');
              }
              const responseData = await response.json();
              alert('Product  removed  Successfully');
              console.log(responseData);
              location.reload();
            } catch (error) {
              console.log(
                'Error While removing product from cart',
                error.message
              );
            }
          });
        });

        //  for checkout btn
        const checkoutBtn = document.getElementById('checkout_btn');
        checkoutBtn.addEventListener('click', async () => {
          try {
            const userId = '<%= userCart.userId%>';
            const response = await fetch('/orders', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                userId,
              }),
            });

            if (!response.ok) {
              const errorMessage = await response.text();
              throw new Error(errorMessage);
            }

            const orderData = await response.json();
            alert('Checkout successfully!');
            console.log(orderData);
          } catch (error) {
            console.error('Error adding product to cart:', error.message);
            alert(
              'An error occurred while adding the product to the cart. Please try again.'
            );
          }
        });
      });
    </script>
  </body>
</html>
